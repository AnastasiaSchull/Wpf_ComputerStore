<Application x:Class="Wpf_ComputerStore.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Wpf_ComputerStore"
               xmlns:properties="clr-namespace:Wpf_ComputerStore.Properties"
              xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
           
             StartupUri="Views/MessageWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>
                  
            <Style  x:Key="ButtonStyle" TargetType="{x:Type ButtonBase}"  BasedOn="{StaticResource MaterialDesignRaisedButton}">
               
                <Setter Property="Margin" Value="10"/>
                <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="10"/>
                <Setter Property="IsEnabled" Value="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                <Setter Property="ToolTip" Value="MaterialDesignRaisedDarkButton with Round Corners"/>
                <Style.Triggers>

                    <!--first we will have to check which mode user wants to switch to by default we selected light in settings here... what we want is 
         when user selects the radio button for dark the ui should sweitch to dark mode n so on..-->
    
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation Duration="0:0:0.250" To="20" 
                                                     Storyboard.TargetProperty="FontSize" />

                                </Storyboard>

                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation Duration="0:0:0.550" To="18" 
                                                     Storyboard.TargetProperty="FontSize" />

                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                    
                    <!-- Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                        <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark}" />
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark.Foreground}" />
                    </DataTrigger>

                    <!-- Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                        <Setter Property="Background" Value="Teal"/>
                        <Setter Property="BorderBrush" Value="#363C49"/>
                        <Setter Property="Foreground" Value="White"/>
                    </DataTrigger>
                  
                </Style.Triggers>
            </Style>

            
            <Style x:Key="ComboBoxStyle"   TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
                <Setter Property="materialDesign:ColorZoneAssist.Mode" Value="SecondaryLight"/>
                <Setter Property="materialDesign:TextFieldAssist.HasClearButton"  Value="True"/>
                <Setter Property="Background" Value="#f2f3f5"/>
                <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="#6600CC"/>
                        <Setter Property="Foreground" Value="#6600CC"/>
                        
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="Teal"/>
                        <Setter Property="Foreground" Value="Teal"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            
            <Style x:Key="ListViewItemOptionStyle" TargetType="ListViewItem">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="5"/>
            <Style.Triggers>
                        <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="True" />
                        </MultiTrigger.Conditions>
                    </MultiTrigger>
                
                   
                
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                        <Setter Property="Background" Value="#BCBCE8" />
                        <Setter Property="BorderBrush" Value="#CCFFE5" />
                        <Setter Property="Foreground" Value="White"/>
                            </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                        <Setter Property="Background" Value="#e7e8e7" />
                        <Setter Property="BorderBrush" Value="Teal" />
                        <Setter Property="Foreground" Value="Black"/>
                       
                    </DataTrigger>

                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Background"  >
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="White" Offset="0.0"/>
                                <GradientStop Color="#b6e8f1" Offset="1.0"/>
                                  
                                </LinearGradientBrush>
                        </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
                    
            <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="#6600CC"/>
                        <Setter Property="Foreground" Value="#6600CC" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="Teal"/>
                        <Setter Property="Foreground" Value="Teal" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="#6600CC"/>
                        <Setter Property="Foreground" Value="#6600CC" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="Teal"/>
                        <Setter Property="Foreground" Value="Teal" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
                <Setter Property="FontFamily" Value="Corbel"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black"/>
                                    <GradientStop Color="#FFCADDFA" Offset="1"/>
                                    <GradientStop Color="#8B8BDF" Offset="0.997"/>
                                    <GradientStop Color="#FF0B0C0E"/>
                                    <GradientStop Color="#FF5A6270"/>
                                    <GradientStop Color="#FF8490A4"/>
                                    <GradientStop Color="White"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black"/>
                                    <GradientStop Color="#b1d2d1" Offset="1"/>
                                    <GradientStop Color="#FF8490A4" Offset="0.997"/>
                                    <GradientStop Color="#FF0B0C0E"/>
                                    <GradientStop Color="#FF5A6270"/>
                                    <GradientStop Color="#FF8490A4"/>
                                    <GradientStop Color="White"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
               

               
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark.Foreground}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
           
            <Style TargetType="PasswordBox" BasedOn="{StaticResource {x:Type PasswordBox}}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="#6600CC"/>
                        <Setter Property="Foreground" Value="#6600CC" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="Teal"/>
                        <Setter Property="Foreground" Value="Teal" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>


            <Style  x:Key="ButtonStyleForPlus" TargetType="{x:Type ButtonBase}"  BasedOn="{StaticResource MaterialDesignRaisedButton}">

                <Setter Property="Margin" Value="10"/>
                <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="10"/>
                <Setter Property="IsEnabled" Value="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                <Setter Property="ToolTip" Value="MaterialDesignRaisedDarkButton with Round Corners"/>
               
                <Style.Triggers>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    
                                    <DoubleAnimation Duration="0:0:0.250" To="32" 
                                            Storyboard.TargetProperty="FontSize" />

                                </Storyboard>

                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation Duration="0:0:0.550" To="30" 
                                            Storyboard.TargetProperty="FontSize" />

                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>

                    <!-- Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                        <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark}" />
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark.Foreground}" />
                    </DataTrigger>

                    <!-- Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                        <Setter Property="Background" Value="Teal"/>
                        <Setter Property="BorderBrush" Value="#363C49"/>
                        <Setter Property="Foreground" Value="White"/>
                    </DataTrigger>

                </Style.Triggers>
            </Style>

            <Style  x:Key="ButtonStyleForHome" TargetType="{x:Type ButtonBase}"  BasedOn="{StaticResource MaterialDesignRaisedButton}">

                <Setter Property="Margin" Value="10"/>
                <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="10"/>
                <Setter Property="IsEnabled" Value="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                <Setter Property="ToolTip" Value="MaterialDesignRaisedDarkButton with Round Corners"/>

                <Style.Triggers>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation Duration="0:0:0.250" To="30" 
                                Storyboard.TargetProperty="FontSize" />

                                </Storyboard>

                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation Duration="0:0:0.550" To="28" 
                                Storyboard.TargetProperty="FontSize" />

                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>

                    <!-- Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                        <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark}" />
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark.Foreground}" />
                    </DataTrigger>

                    <!-- Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                        <Setter Property="Background" Value="Teal"/>
                        <Setter Property="BorderBrush" Value="#363C49"/>
                        <Setter Property="Foreground" Value="White"/>
                    </DataTrigger>

                </Style.Triggers>
            </Style>

            <Style  x:Key="ButtonStyleForPen" TargetType="{x:Type ButtonBase}"  BasedOn="{StaticResource MaterialDesignRaisedButton}">

                <Setter Property="Margin" Value="10"/>
                <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="10"/>
                <Setter Property="IsEnabled" Value="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                <Setter Property="ToolTip" Value="MaterialDesignRaisedDarkButton with Round Corners"/>

                <Style.Triggers>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation Duration="0:0:0.250" To="22" 
                     Storyboard.TargetProperty="FontSize" />

                                </Storyboard>

                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation Duration="0:0:0.550" To="20" 
                     Storyboard.TargetProperty="FontSize" />

                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>

                    <!-- Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                        <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark}" />
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark.Foreground}" />
                    </DataTrigger>

                    <!-- Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                        <Setter Property="Background" Value="Teal"/>
                        <Setter Property="BorderBrush" Value="#363C49"/>
                        <Setter Property="Foreground" Value="White"/>
                    </DataTrigger>

                </Style.Triggers>
            </Style>

            <Style  x:Key="ButtonStyleForCart" TargetType="{x:Type ButtonBase}"  BasedOn="{StaticResource MaterialDesignRaisedButton}">

                <Setter Property="Margin" Value="10"/>
                <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="10"/>
                <Setter Property="IsEnabled" Value="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                <Setter Property="ToolTip" Value="MaterialDesignRaisedDarkButton with Round Corners"/>

                <Style.Triggers>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation Duration="0:0:0.250" To="24" 
           Storyboard.TargetProperty="FontSize" />

                                </Storyboard>

                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation Duration="0:0:0.550" To="22" 
           Storyboard.TargetProperty="FontSize" />

                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>

                    <!-- Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                        <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark}" />
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark.Foreground}" />
                    </DataTrigger>

                    <!-- Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                        <Setter Property="Background" Value="Teal"/>
                        <Setter Property="BorderBrush" Value="#363C49"/>
                        <Setter Property="Foreground" Value="White"/>
                    </DataTrigger>

                </Style.Triggers>
            </Style>

            <Style  x:Key="ButtonStyleForFind" TargetType="{x:Type ButtonBase}"  BasedOn="{StaticResource MaterialDesignRaisedButton}">

                <Setter Property="Margin" Value="10"/>
                <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="10"/>
                <Setter Property="IsEnabled" Value="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                <Setter Property="ToolTip" Value="MaterialDesignRaisedDarkButton with Round Corners"/>

                <Style.Triggers>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation Duration="0:0:0.250" To="23" 
                 Storyboard.TargetProperty="FontSize" />

                                </Storyboard>

                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation Duration="0:0:0.550" To="21" 
                 Storyboard.TargetProperty="FontSize" />

                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>

                    <!-- Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                        <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark}" />
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark.Foreground}" />
                    </DataTrigger>

                    <!-- Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                        <Setter Property="Background" Value="Teal"/>
                        <Setter Property="BorderBrush" Value="#363C49"/>
                        <Setter Property="Foreground" Value="White"/>
                    </DataTrigger>

                </Style.Triggers>
            </Style>

           
        </ResourceDictionary>
    </Application.Resources>
   
</Application>
